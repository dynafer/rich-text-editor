@import '_mixin';
@import 'elements/DOMTools';

@mixin word-break {
	overflow-wrap: break-word;
	word-wrap: break-word;
}

@mixin firefox($item) {
	@supports not (-moz-appearance: none) {
		#{$item} > * {
			@include margin(rem, 0.75, $bottom: 0.75);
			@include height($line: 1.4);
			word-wrap: break-word;
		}
	}
}

@mixin tag-styles {
	code {
		@include padding(rem, $right: 0.2, $left: 0.2);
		background-color: #dee2e6;

		&:hover {
			background-color: getVar(format-code-hover-bg);
		}

		&[data-focused] {
			background-color: getVar(format-code-focused-bg);
		}
	}

	blockquote {
		@include padding(rem, $left: 2, $right: 2);
		@include border($left: #ccc, $size: 5px);
		@include margin($left: 0, $right: 0);
		font-style: italic;
	}

	a {
		text-decoration: none;

		&:hover {
			background-color: getVar(format-anchor-hover-bg);
			text-decoration: underline;
		}

		&[data-focused] {
			background-color: getVar(format-anchor-focused-bg);
			text-decoration: underline;
		}
	}

	figure {
		@include position(relative);
		@include margin($left: 0, $right: 0);

		&[type='hr'] {
			hr {
				@include all-border(#ddd, 3px);
			}

			&:not([data-focused]):hover {
				hr {
					@include all-border(getVar(hover-color), 3px);
				}
			}

			&[data-focused] {
				hr {
					outline: getVar(selected-color) solid 3px;
				}
			}
		}

		&[type='media'] {
			img,
			iframe,
			video,
			audio {
				@include position(relative);
				@include width($min: 1.25rem);
				@include height($min: 1.25rem);
			}

			video,
			audio {
				background-color: #000;
			}

			iframe {
				pointer-events: none;
			}
		}

		&[type='table'] {
			table {
				border-collapse: collapse;
				box-sizing: border-box;

				[data-selected] {
					background-color: getVar(selected-color);
				}

				td,
				th {
					@include width($min: 2rem);
					box-sizing: border-box;
					white-space: nowrap;

					p {
						@include all-margin(0);
					}
				}
			}

			&[data-focused] {
				table {
					@include position(relative);
				}
			}
		}

		&[style*='float: left'] {
			@include margin(rem, 1.5, 1.5, 1.5, 0);
		}

		&[style*='float: right'] {
			@include margin(rem, 1.5, 0, 1.5, 1.5);
		}

		&[style*='margin-left: 0'][style*='margin-right: auto'],
		&[style*='margin-left: 0px'][style*='margin-right: auto'] {
			img,
			iframe,
			video,
			audio,
			div[data-fake],
			table {
				@include margin(null, $left: 0, $right: auto);

				&:not(table) {
					display: block;
				}
			}
		}

		&[style*='margin-left: auto'][style*='margin-right: auto'] {
			img,
			iframe,
			video,
			audio,
			div[data-fake],
			table {
				@include all-margin(auto auto);

				&:not(table) {
					display: block;
				}
			}
		}

		&[style*='margin-left: auto'][style*='margin-right: 0'],
		&[style*='margin-left: auto'][style*='margin-right: 0px'] {
			img,
			iframe,
			video,
			audio,
			div[data-fake],
			table {
				@include margin(null, $left: auto, $right: 0);

				&:not(table) {
					display: block;
				}
			}
		}

		table[data-adjusting] {
			@include font($color: transparent);
			border-style: dotted;

			th,
			td {
				border-style: dotted;
				white-space: nowrap;
			}
		}

		@include dom-tools;
	}

	[contenteditable='true'] {
		outline: none;
	}
}

##{getClassName(editor-body)} {
	@include firefox(body);
	@include all-margin(1rem);
	@include word-break;
	@include tag-styles;
}

.#{getClassName(inline)} {
	@include all-border(getVar(editor-border));
	background-color: getVar(editor-bg);

	##{getClassName(editor-body)} {
		@include firefox('##{getClassName(editor-body)}');
		@include all-margin(0.75rem);
		@include word-break;
		@include tag-styles;
		outline: none;
	}
}

.#{getClassName(tools-size-navigation)} {
	@include position(absolute, 0, 0);
	@include font($color: getVar(tools-size-navigation-font));
	@include all-padding(0.25rem);
	background-color: getVar(tools-size-navigation-bg);
	white-space: nowrap;
}
