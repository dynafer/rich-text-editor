@import '_function';
@import '_keyframes';

@mixin check-null($style, $value, $return: null) {
	@if $value != null {
		@if $value == none {
			#{$style}: none;
		} @else {
			@if $return != null {
				#{$style}: #{$return};
			} @else {
				#{$style}: #{$value};
			}
		}
	}
}

@mixin width($width: null, $min: null, $max: null) {
	@include check-null(width, $width);
	@include check-null(min-width, $min);
	@include check-null(max-width, $max);
}

@mixin height($height: null, $min: null, $max: null, $line: null) {
	@include check-null(height, $height);
	@include check-null(min-height, $min);
	@include check-null(max-height, $max);
	@include check-null(line-height, $line);
}

@mixin padding($type: px, $top: null, $right: null, $bottom: null, $left: null) {
	@if $type == null {
		@include check-null(padding-top, $top);
		@include check-null(padding-right, $right);
		@include check-null(padding-bottom, $bottom);
		@include check-null(padding-left, $left);
	} @else {
		@include check-null(padding-top, $top, combineType($type, $top));
		@include check-null(padding-right, $right, combineType($type, $right));
		@include check-null(padding-bottom, $bottom, combineType($type, $bottom));
		@include check-null(padding-left, $left, combineType($type, $left));
	}
}

@mixin all-padding($size) {
	@include check-null(padding, $size);
}

@mixin margin($type: px, $top: null, $right: null, $bottom: null, $left: null) {
	@if $type == null {
		@include check-null(margin-top, $top);
		@include check-null(margin-right, $right);
		@include check-null(margin-bottom, $bottom);
		@include check-null(margin-left, $left);
	} @else {
		@include check-null(margin-top, $top, combineType($type, $top));
		@include check-null(margin-right, $right, combineType($type, $right));
		@include check-null(margin-bottom, $bottom, combineType($type, $bottom));
		@include check-null(margin-left, $left, combineType($type, $left));
	}
}

@mixin all-margin($size) {
	margin: $size;
}

@mixin square($size) {
	@include width($size);
	@include height($size);
}

@mixin rectangle($width, $height) {
	@include width($width);
	@include height($height);
}

@mixin round($size) {
	border-radius: $size;
}

@mixin position($type, $top: null, $left: null, $bottom: null, $right: null) {
	position: $type;
	@include check-null(top, $top);
	@include check-null(left, $left);
	@include check-null(bottom, $bottom);
	@include check-null(right, $right);
}

@mixin flex($align: null, $justify: null, $direction: null, $wrap: null, $inline: false) {
	@if $inline != false {
		display: inline-flex;
	} @else {
		display: flex;
	}

	@include check-null(align-items, $align);
	@include check-null(justify-content, $justify);
	@include check-null(flex-direction, $direction);
	@include check-null(flex-wrap, $wrap);
}

@mixin truncation {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin font($size: null, $weight: null, $color: null) {
	@include check-null(font-size, $size);
	@include check-null(font-weight, $weight);
	@include check-null(color, $color);
}

@mixin all-border($color, $size: 1px, $style: solid) {
	@if $color == none {
		border: none;
	} @else {
		border: #{$size} #{$style} #{$color};
	}
}

@mixin border($top: null, $right: null, $bottom: null, $left: null, $size: 1px, $style: solid) {
	@include check-null(border-top, $top, #{$size} #{$style} #{$top});
	@include check-null(border-right, $right, #{$size} #{$style} #{$right});
	@include check-null(border-bottom, $bottom, #{$size} #{$style} #{$bottom});
	@include check-null(border-left, $left, #{$size} #{$style} #{$left});
}

@mixin outline($color, $style: solid, $size: 1px) {
	@if $color == none {
		outline: none;
	} @else {
		outline: #{$color} #{$style} #{$size};
	}
}

@mixin mobile {
	@media (min-width: 0px) and (max-width: #{$max-mobile-width}) {
		@content;
	}
}

@mixin tablet {
	@media (min-width: #{$max-mobile-width + 1px}) and (max-width: #{$max-tablet-width}) {
		@content;
	}
}

@mixin common-button {
	@include round(getVar(button-radius));
	@include all-margin(0.25rem);
	@include padding(rem, 0.25, 0.4, 0.25, 0.4);
	@include font(1rem);
	@include flex(center, space-between, $inline: true);
	cursor: pointer;

	svg {
		@include square(1rem);
		@include margin(rem, $right: 0.25);
	}
}

@mixin make-button($type: null) {
	@if $type == null {
		$type: '';
	} @else {
		$type: #{$type}-;
	}

	@include all-border(getVar(button-#{$type}border));
	@include font($color: getVar(button-#{$type}font));
	background-color: getVar(button-#{$type}bg);

	svg {
		fill: getVar(button-#{$type}icon-fill);
	}

	&:hover {
		@include all-border(getVar(button-#{$type}hover-border));
		@include font($color: getVar(button-#{$type}hover-font));
		background-color: getVar(button-#{$type}hover-bg);

		svg {
			fill: getVar(button-#{$type}hover-icon-fill);
		}
	}
}

@mixin success-button {
	@include make-button(success);
}

@mixin cancel-button {
	@include make-button(cancel);
}

@mixin remove-button {
	@include make-button(remove);
}
